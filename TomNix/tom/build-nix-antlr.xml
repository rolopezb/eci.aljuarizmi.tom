<?xml version="1.0" encoding="UTF-8"?>
<project name="TomNix" default="build" basedir=".">
	<!--
   Ejemplo de compilacion, usando generaciÃ³n de fuentes via Antlr.
-->
	<property environment="env" />
	<property name="tom.home" value="${env.TOM_HOME}" />
	<import file="${tom.home}/lib/tom-common.xml" />


	<property name="src" location="src" />
	<property name="gen" location="../src" />
	<property name="build" location="build" />
	<property name="bin" location="../bin" />
	<property name="parser" value="nix" />


	<path id="run.classpath">
		<pathelement location="${build}" />
		<path refid="tom.classpath" />
	</path>
	
	<path id="test.classpath">
		<pathelement location="${bin}" />
		<path refid="tom.classpath" />
	</path>

	<target name="refresh">
		<eclipse.refreshLocal resource="TomNix/src" depth="infinite"/>
		<echo message="TomNix/src Ambiente refrescado"></echo>
		<eclipse.refreshLocal resource="TomNix/tom/src" depth="infinite"/>
		<echo message="TomNix/tom/src Ambiente refrescado"></echo>
	</target>

	<target name="clean" description="Cleans gen and build directory">
		<delete dir="${gen}" />
		<delete dir="${build}" />
		<antcall target="refresh"/>
	</target>

	<target name="local.init" depends="tom.init">
		<mkdir dir="${gen}" />
		<mkdir dir="${gen}/${parser}"/> <!-- No se si haya conflicto al usar gom-->
	</target>

	<target name="gom" depends="local.init">
		<gom.preset srcdir="${src}" destdir="${gen}">
			<include name="${parser}/Rec.gom" />
		</gom.preset>
		<antcall target="refresh"/> 
	</target>

	<target name="gomantlradapter" depends="local.init">
		<gomantlradapter.preset srcdir="${src}" destdir="${gen}" package="${parser}">
			<include name="${parser}/**/Rec.gom" />
		</gomantlradapter.preset>
		<antcall target="refresh"/>
	</target>

	<target name="antlr3" depends="local.init">
		<description>Genera los fuentes java a partir de antlr</description>
		<taskdef name="antlr3" classname="org.apache.tools.ant.antlr.ANTLR3">
			<classpath refid="tom.classpath" />
		</taskdef>

		<!-- Por ahora se omite el atributo libdirectory que indica en donde hay archivos de tokens.
		  	     Ver build-minilang-antlr-->
		<antlr3 target="${src}/${parser}/Nix.g" 
			outputdirectory="${gen}/${parser}" 
			multithreaded="true">
			<classpath refid="tom.classpath" />
		</antlr3>
		<antcall target="refresh"/>
	</target>

	<target name="tom" depends="gom,gomantlradapter">
		<tom.preset srcdir="${src}" destdir="${gen}">
		</tom.preset>
		<antcall target="refresh"/>
	</target>

	<target name="java.compile" depends="local.init">
		<mkdir dir="${build}" />
		<javac.preset includeantruntime="false" destdir="${build}">
			<src path="${src}" />  <!-- Por si hay clases (no tom) adicionales -->
			<src path="${gen}" />
			<classpath refid="tom.classpath" />
		</javac.preset>
	</target>

	<target name="build" depends="gom,gomantlradapter,antlr3,tom,java.compile" />

	<target name="run.test">
		<java classname="lang.test.LexerTest" fork='yes' failonerror="true">
			<classpath refid="test.classpath" />
			<arg value="../test1.nix" />
		</java>

	</target>

</project>